sudo: required

dist: bionic

language: python

python:
  - '3.6'

services:
  - docker

before_install:
  - if [[ "$BUILD" != "development" ]]; then
    echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin;
    sudo apt-get update && sudo apt-get -y install git;
    fi
  - if [[ $BUILD == "development" ]];then
    sudo apt-get update && sudo apt-get -y install docker-compose;
    fi
  - chmod u+x ./travis.py

after_success:
  - docker --version

jobs:
  include:

    - stage: "ui (v1)"
      if: branch = master AND type != pull_request
      script:
        - ./travis.py ui --worker --tag v1

    - stage: "ui (v1)"
      if: branch = master AND type != pull_request
      script:
        - ./travis.py ui --nginx --tag v1
    

    - stage: "Build and test edge images"
      if: type = pull_request
      before_install:
        - sudo curl -L "https://github.com/docker/compose/releases/download/1.26.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        - sudo chmod +x /usr/local/bin/docker-compose
        - sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose
        - sudo apt-get update && sudo apt-get -y install w3m
      script:
        - docker build -t frappe/frappe-socketio:edge -f build/frappe-socketio/Dockerfile .
        - docker build -t frappe/frappe-worker:develop -f build/frappe-worker/Dockerfile .
        - docker build -t frappe/erpnext-worker:edge -f build/erpnext-worker/Dockerfile .
        - docker build -t frappe/frappe-nginx:develop -f build/frappe-nginx/Dockerfile .
        - docker build -t frappe/erpnext-nginx:edge -f build/erpnext-nginx/Dockerfile .
        - ./tests/docker-test.sh


    - stage: "Pull and test edge images"
      if: branch = develop AND type != pull_request
      before_install:
        - sudo apt-get update && sudo apt-get -y install docker-compose w3m
      script:
        - ./tests/docker-test.sh


    - stage: "Helm Chart Release"
      if: branch = master AND type != pull_request
      env:
        - GIT_SSH_COMMAND="ssh -i ${TRAVIS_BUILD_DIR}/deploy_key"
      before_install:
        - openssl aes-256-cbc -K $encrypted_189e52c2c347_key -iv $encrypted_189e52c2c347_iv -in deploy_key.enc -out deploy_key -d;
          chmod 400 deploy_key;
        - ssh-keyscan github.com >> $HOME/.ssh/known_hosts 2>/dev/null;
      install:
        - pip install --upgrade pip
      script:
        - git clone git@github.com:frappe/helm.git && cd helm
        - pip install -r release_wizard/requirements.txt
        - ./release_wizard/wizard 12 patch --remote origin --ci
